// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "12/20/2018 00:46:32"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Trial2
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Trial2_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clock;
reg [2:0] customIn;
reg startTheProgram;
// wires                                               
wire [7:0] ALURead;
wire [7:0] customOut;
wire [7:0] DataMemRead;
wire [15:0] InstructionRead;
wire [4:0] OPCodeRead;
wire [7:0] PCreading;
wire [7:0] RSReading;
wire [7:0] RTreading;
wire [7:0] WBRead;

// assign statements (if any)                          
Trial2 i1 (
// port map - connection between master ports and signals/registers   
	.ALURead(ALURead),
	.clock(clock),
	.customIn(customIn),
	.customOut(customOut),
	.DataMemRead(DataMemRead),
	.InstructionRead(InstructionRead),
	.OPCodeRead(OPCodeRead),
	.PCreading(PCreading),
	.RSReading(RSReading),
	.RTreading(RTreading),
	.startTheProgram(startTheProgram),
	.WBRead(WBRead)
);
initial 
begin 
#1000000 $finish;
end 

// clock
always
begin
	clock = 1'b0;
	clock = #25000 1'b1;
	#25000;
end 
// customIn[ 2 ]
initial
begin
	customIn[2] = 1'b0;
	customIn[2] = #220000 1'b1;
	customIn[2] = #770000 1'b0;
end 
// customIn[ 1 ]
initial
begin
	customIn[1] = 1'b0;
	customIn[1] = #220000 1'b1;
	customIn[1] = #770000 1'b0;
end 
// customIn[ 0 ]
initial
begin
	customIn[0] = 1'b0;
end 

// startTheProgram
initial
begin
	startTheProgram = 1'b1;
	startTheProgram = #50000 1'b0;
end 
endmodule

